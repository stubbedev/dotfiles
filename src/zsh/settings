#!/bin/zsh

autoload -Uz compinit
compinit

bindkey "^Xa" _expand_alias
bindkey -s "^[r" "source ~/.zshrc && clear^M"
bindkey -s "^[o" "nvim^M"
bindkey -s "^[O" "nvim .^M"
zstyle ':completion:*' completer _expand_alias _complete _ignored
zstyle ':completion:*' regular true
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
if is_binary eza; then
    # preview directory's content with eza when completing cd
    zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
fi
# custom fzf flags
zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'


HYPHEN_INSENSITIVE=false
DISABLE_AUTO_TITLE=true
ENABLE_CORRECTION=true
VIM_MODE_NO_DEFAULT_BINDINGS=true

if ! is_file "$STBDIR/history"; then
    touch "$STBDIR/history"
fi
HISTFILE=$STBDIR/history

HISTTIMEFORMAT="[%F %T] "
SAVEHIST=10000
HISTSIZE=10000
ZSH_FZF_HISTORY_SEARCH_BIND='^r'
setopt APPEND_HISTORY
setopt SHARE_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_ALL_DUPS

# FOR CLIPBOARD STUFF
export DISPLAY=:1
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export MANROFFOPT="-c"

if is_binary fzf; then
    bindkey -s "^[f" "ts^M"
    bindkey -s "^[d" "tstls^M"
    bindkey -s "^[g" "tslg^M"
    bindkey -s "^[A" "tsld^M"
    bindkey -s "^[a" "htop_wrapper^M"
    source <(fzf --zsh)
    export FZF_CTRL_T_OPTS="
      --walker-skip .git,node_modules,target
      --preview 'bat -n --color=always {}'
      --bind 'ctrl-/:change-preview-window(down|hidden|)'"
    export FZF_CTRL_R_OPTS=""
    export FZF_ALT_C_COMMAND=""
fi

if is_binary starship; then
    export STARSHIP_CONFIG="$HOME/.stubbe/src/starship/starship.toml"
    export STARSHIP_LOG="error"
    type starship_zle-keymap-select >/dev/null || \
      {
        eval "$(starship init zsh)"
      }
fi

